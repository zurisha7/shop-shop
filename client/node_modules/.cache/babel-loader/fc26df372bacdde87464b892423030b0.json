{"ast":null,"code":"import { UPDATE_PRODUCTS, UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from \"./actions\";\nimport { useReducer } from 'react';\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    //if action type value is the value of UPDATE_PRODUCTS, return a new state onject with and updated products array\n    case UPDATE_PRODUCTS:\n      return { ...state,\n        products: [...action.products]\n      };\n    //if action type value is the value of UPDATE_CATEGORIES, return a new state objevt with and updated categories array\n\n    case UPDATE_CATEGORIES:\n      return { ...state,\n        categories: [...action.categories]\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return { ...state,\n        currentCategory: action.currentCategory\n      };\n    // if it's none of these actions, do not update sate at all and keep things the same\n\n    default:\n      return state;\n  }\n};\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState);\n}","map":{"version":3,"names":["UPDATE_PRODUCTS","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","useReducer","reducer","state","action","type","products","categories","currentCategory","useProductReducer","initialState"],"sources":["C:/Users/Andrea/Desktop/shop-shop/client/src/utils/reducers.js"],"sourcesContent":["import {\r\n    UPDATE_PRODUCTS,\r\n    UPDATE_CATEGORIES,\r\n    UPDATE_CURRENT_CATEGORY\r\n} from \"./actions\";\r\n\r\nimport { useReducer } from 'react';\r\n\r\nexport const reducer = (state, action) => {\r\n    switch (action.type) {\r\n        //if action type value is the value of UPDATE_PRODUCTS, return a new state onject with and updated products array\r\n      case UPDATE_PRODUCTS:\r\n        return {\r\n            ...state,\r\n            products: [...action.products],\r\n        };\r\n        //if action type value is the value of UPDATE_CATEGORIES, return a new state objevt with and updated categories array\r\n        case UPDATE_CATEGORIES:\r\n            return {\r\n                ...state,\r\n                categories: [...action.categories]\r\n            };\r\n\r\n        case UPDATE_CURRENT_CATEGORY:\r\n            return {\r\n                ...state,\r\n                currentCategory: action.currentCategory\r\n            };\r\n\r\n\r\n        // if it's none of these actions, do not update sate at all and keep things the same\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport function useProductReducer(initialState) {\r\n    return useReducer(reducer, initialState);\r\n}"],"mappings":"AAAA,SACIA,eADJ,EAEIC,iBAFJ,EAGIC,uBAHJ,QAIO,WAJP;AAMA,SAASC,UAAT,QAA2B,OAA3B;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACtC,QAAQA,MAAM,CAACC,IAAf;IACI;IACF,KAAKP,eAAL;MACE,OAAO,EACH,GAAGK,KADA;QAEHG,QAAQ,EAAE,CAAC,GAAGF,MAAM,CAACE,QAAX;MAFP,CAAP;IAIA;;IACA,KAAKP,iBAAL;MACI,OAAO,EACH,GAAGI,KADA;QAEHI,UAAU,EAAE,CAAC,GAAGH,MAAM,CAACG,UAAX;MAFT,CAAP;;IAKJ,KAAKP,uBAAL;MACI,OAAO,EACH,GAAGG,KADA;QAEHK,eAAe,EAAEJ,MAAM,CAACI;MAFrB,CAAP;IAMJ;;IACA;MACI,OAAOL,KAAP;EAvBR;AAyBH,CA1BM;AA4BP,OAAO,SAASM,iBAAT,CAA2BC,YAA3B,EAAyC;EAC5C,OAAOT,UAAU,CAACC,OAAD,EAAUQ,YAAV,CAAjB;AACH"},"metadata":{},"sourceType":"module"}